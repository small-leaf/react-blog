{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","components/Spinner/Spinner.js","pages/HomePage/HomePage.js","img/LOGO.png","pages/AboutMePage/AboutMePage.js","pages/RegisterPage/RegisterPage.js","pages/PostPage/PostPage.js","pages/AddPostPage/AddPostPage.js","pages/PostListPage/PostListPage.js","components/Header/Header.js","components/App/App.js","index.js"],"names":["setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPosts","fetch","then","res","json","getPaginationPost","page","getMe","method","headers","authorization","AuthContext","createContext","ErrorMessage","styled","div","Form","form","InputWrapper","InputLabel","SubmitButton","button","LoginPage","setUser","useContext","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","isLoading","setIsLoading","history","useHistory","onSubmit","e","preventDefault","body","JSON","stringify","login","data","ok","message","push","value","onChange","target","type","rotate","keyframes","Wrap","SpinnerBorder","Spinner","Root","PostContainer","PostInfo","PostTitle","PostDate","PostBody","ReadMore","Link","PageContainer","PageBtn","a","Post","post","title","Date","createdAt","toLocaleString","to","id","HomePage","posts","setPosts","pages","setPages","handleButtonClick","useEffect","totalPage","Math","ceil","length","i","pagination","map","onClick","Banner","AboutMe","Name","Intro","AboutPage","src","logo","alt","RegisterPage","nickname","setNickname","register","PostHeader","PostPage","setPost","useParams","getPost","TextArea","textarea","AddPostPage","setTitle","setBody","addPost","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","user","location","useLocation","pathname","App","Provider","exact","path","PostListPage","AboutMePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f53d080c.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nconst setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nconst getAuthToken = () => {\n  return localStorage.getItem(\"token\");\n};\n\nconst pagination = (totalPage) => {\n  const page = [];\n  for (let i = 1; i <= totalPage; i++) {\n    page.push(i);\n  }\n  return page;\n};\n\nexport { setAuthToken, getAuthToken, pagination };\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = `https://student-json-api.lidemy.me`;\n\nconst getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nconst getPost = (id) => {\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\n};\n\nconst getPaginationPost = (page) => {\n  return fetch(\n    `${BASE_URL}/posts?_page=${page}&_limit=5&_sort=createdAt&_order=desc`\n  ).then((res) => res.json());\n};\n\nconst login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nconst register = (username, nickname, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nconst getMe = () => {\n  const token = getAuthToken();\n\n  return fetch(`${BASE_URL}/me`, {\n    method: \"GET\",\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nconst addPost = (title, body) => {\n  const token = getAuthToken();\n\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport {\n  getPosts,\n  getPost,\n  getPaginationPost,\n  register,\n  login,\n  getMe,\n  addPost,\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","import styled from \"styled-components\";\nimport React, { useState, useContext } from \"react\";\nimport { login, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: red;\n`;\n\nconst Form = styled.form`\n  margin: 50px auto;\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 62px 72px; ;\n`;\n\nconst InputWrapper = styled.div`\n  margin-top: 23px;\n\n  input {\n    width: 350px;\n    height: 40px;\n    padding: 0 20px;\n    font-size: 16px;\n    border-radius: 20px;\n    outline: transparent;\n  }\n`;\nconst InputLabel = styled.div`\n  font-size: 14px;\n  margin-left: 21px;\n`;\n\nconst SubmitButton = styled.button`\n  margin: 53px auto;\n  width: 400px;\n  height: 56px;\n  outline: transparent;\n  background-color: gray;\n  border-radius: 20px;\n  border: 1px solid gray;\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n`;\n\nfunction LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    setIsLoading(true);\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok !== 1) {\n        setIsLoading(false);\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((res) => {\n        if (res.ok === 0) {\n          setAuthToken(null);\n          setIsLoading(false);\n          return setErrorMessage(res.message);\n        }\n        setUser(res.data);\n        setIsLoading(false);\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <InputLabel>USERNAME</InputLabel>\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </InputWrapper>\n      <InputWrapper>\n        <InputLabel>PASSWORD</InputLabel>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </InputWrapper>\n      <SubmitButton>登入</SubmitButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n\nexport default LoginPage;\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate = keyframes`\r\n   from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 200px;\r\n`;\r\n\r\nconst SpinnerBorder = styled.div`\r\n  display: inline-block;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border: 5px solid black;\r\n  border-right-color: transparent;\r\n  border-radius: 50%;\r\n  animation: ${rotate} 0.75s linear infinite;\r\n`;\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Wrap>\r\n      <SpinnerBorder />\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts, getPaginationPost } from \"../../WebAPI\";\nimport { pagination } from \"../../utils\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  padding: 30px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  margin-top: 24px;\n`;\n\nconst PostInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst PostTitle = styled.div`\n  color: black;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostBody = styled.div`\n  margin-top: 20px;\n  overflow: hidden;\n  line-height: 1.5em;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst ReadMore = styled(Link)`\n  display: inline-block;\n  padding: 12px 16px;\n  border: solid 1px #737373;\n  color: #737373;\n  margin-top: 36px;\n  text-decoration: none;\n`;\n\nconst PageContainer = styled.div`\n  margin: 50px 0;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PageBtn = styled.a`\n  position: relative;\n  padding: 10px 20px;\n  margin-left: 2px;\n  color: black;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst Post = ({ post }) => {\n  return (\n    <PostContainer>\n      <PostInfo>\n        <PostTitle>{post.title}</PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </PostInfo>\n      <PostBody>{post.body}</PostBody>\n      <ReadMore to={`/post/${post.id}`}>READ MORE</ReadMore>\n    </PostContainer>\n  );\n};\n\nconst HomePage = () => {\n  const [posts, setPosts] = useState([]);\n  const [pages, setPages] = useState([]);\n\n  const handleButtonClick = (page) => {\n    return () => {\n      getPaginationPost(page).then((posts) => {\n        setPosts(posts);\n      });\n    };\n  };\n\n  useEffect(() => {\n    getPosts().then((posts) => {\n      const totalPage = Math.ceil(posts.length / 5);\n      //console.log(totalPage);\n      setPages(pagination(totalPage));\n      //console.log(pagination(totalPage));\n      getPaginationPost(1).then((post) => setPosts(post));\n    });\n  }, []);\n\n  return (\n    <Root>\n      {posts.length > 0 ? (\n        <>\n          {posts.map((post) => (\n            <Post key={post.id} post={post} />\n          ))}\n          <PageContainer>\n            {pages &&\n              pages.map((page) => (\n                <PageBtn key={page} onClick={handleButtonClick(page)}>\n                  {page}\n                </PageBtn>\n              ))}\n          </PageContainer>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </Root>\n  );\n};\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/LOGO.6b8bea6d.png\";","import styled from \"styled-components\";\nimport logo from \"../../img/LOGO.png\";\n\nconst Wrap = styled.div`\n  margin: 30px auto;\n  position: relative;\n  width: 900px;\n  padding: 20px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n`;\nconst Banner = styled.div`\n  position: relative;\n  background: url(https://i.imgur.com/b0S7pGV.gif) center top no-repeat;\n  background-size: cover;\n  height: 400px;\n  border-radius: 20px;\n  overflow: hidden;\n\n  &:after {\n    position: absolute;\n    content: \"\";\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background: rgba(0, 0, 0, 0.5);\n  }\n`;\nconst AboutMe = styled.div`\n  position: relative;\n  z-index: 2;\n  text-align: center;\n  padding-top: 60px;\n\n  img {\n    width: 100px;\n    height: 100px;\n  }\n`;\n\nconst Name = styled.div`\n  text-align: center;\n  font-size: 1.5em;\n  font-weight: bold;\n  color: white;\n`;\nconst Intro = styled.div`\n  padding: 30px 50px;\n  color: white;\n  font-weight: bold;\n`;\n\nconst AboutPage = () => {\n  return (\n    <Wrap>\n      <Banner>\n        <AboutMe>\n          <img src={logo} alt=\"logo\" />\n          <Name>small_leaf</Name>\n          <Intro>明知此花終將謝，然亦迷戀難自拔</Intro>\n        </AboutMe>\n      </Banner>\n    </Wrap>\n  );\n};\n\nexport default AboutPage;\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { register, getMe } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\n\nconst ErrorMessage = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: red;\n`;\n\nconst Form = styled.form`\n  margin: 50px auto;\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 62px 72px; ;\n`;\n\nconst InputWrapper = styled.div`\n  margin-top: 23px;\n\n  input {\n    width: 350px;\n    height: 40px;\n    padding: 0 20px;\n    font-size: 16px;\n    border-radius: 20px;\n    outline: transparent;\n  }\n`;\nconst InputLabel = styled.div`\n  font-size: 14px;\n  margin-left: 21px;\n`;\n\nconst SubmitButton = styled.button`\n  margin: 53px auto;\n  width: 400px;\n  height: 56px;\n  outline: transparent;\n  background-color: gray;\n  border-radius: 20px;\n  border: 1px solid gray;\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n`;\n\nconst RegisterPage = () => {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    setIsLoading(true);\n    setErrorMessage(null);\n    register(username, nickname, password).then((data) => {\n      if (data.ok === 0) {\n        setIsLoading(false);\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n\n      getMe().then((res) => {\n        if (res.ok === 0) {\n          setAuthToken(null);\n          setIsLoading(false);\n          return setErrorMessage(res.message);\n        }\n        setUser(res.data);\n        setIsLoading(false);\n        history.push(\"/\");\n      });\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <InputLabel>USERNAME</InputLabel>\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </InputWrapper>\n      <InputWrapper>\n        <InputLabel>NICKNAME</InputLabel>\n        <input value={nickname} onChange={(e) => setNickname(e.target.value)} />\n      </InputWrapper>\n      <InputWrapper>\n        <InputLabel>PASSWORD</InputLabel>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </InputWrapper>\n      <SubmitButton>註冊</SubmitButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n};\n\nexport default RegisterPage;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { getPost } from \"../../WebAPI\";\nimport { useParams } from \"react-router-dom\";\n\nconst PostContainer = styled.div`\n  width: 80%;\n  margin: 50px auto;\n  padding: 30px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n`;\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled.div`\n  color: black;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostBody = styled.div`\n  margin-top: 20px;\n  white-space: pre-line;\n  word-break: break-word;\n`;\n\nconst PostPage = () => {\n  const [post, setPost] = useState({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPost(id).then((post) => setPost(post[0]));\n  }, [id]);\n\n  return (\n    <PostContainer>\n      <PostHeader>\n        <PostTitle>{post.title}</PostTitle>\n        <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n      </PostHeader>\n      <PostBody>{post.body}</PostBody>\n    </PostContainer>\n  );\n};\n\nexport default PostPage;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { addPost } from \"../../WebAPI\";\n\nconst ErrorMessage = styled.div`\n  font-size: 20px;\n  font-weight: bold;\n  color: red;\n`;\n\nconst Form = styled.form`\n  margin: 30px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 62px 72px; ;\n`;\n\nconst InputWrapper = styled.div`\n  width: 800px;\n  display: flex;\n\n  & + & {\n    margin-top: 23px;\n  }\n  input {\n    width: 700px;\n    height: 40px;\n    padding: 0 13px;\n    box-sizing: border-box;\n    font-size: 16px;\n    outline: transparent;\n  }\n`;\nconst InputLabel = styled.div`\n  margin-right: 20px;\n  font-size: 22px;\n`;\n\nconst TextArea = styled.textarea`\n  width: 700px;\n  height: 200px;\n  padding: 8px 13px;\n  font-size: 16px;\n  box-sizing: border-box;\n`;\n\nconst SubmitButton = styled.button`\n  margin: 53px auto;\n  width: 400px;\n  height: 56px;\n  outline: transparent;\n  background-color: gray;\n  border-radius: 20px;\n  border: 1px solid gray;\n  color: white;\n  cursor: pointer;\n  font-size: 18px;\n`;\n\nconst AddPostPage = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isLoading) return;\n    setIsLoading(true);\n    setErrorMessage(null);\n    addPost(title, body).then((data) => {\n      if (data.ok === 0) {\n        setIsLoading(false);\n        return setErrorMessage(data.message);\n      }\n      setIsLoading(false);\n      history.push(\"/\");\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <InputLabel>標題</InputLabel>\n        <input value={title} onChange={(e) => setTitle(e.target.value)} />\n      </InputWrapper>\n      <InputWrapper>\n        <InputLabel>內容</InputLabel>\n        <TextArea value={body} onChange={(e) => setBody(e.target.value)} />\n      </InputWrapper>\n      <SubmitButton>發布</SubmitButton>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n};\n\nexport default AddPostPage;\n","import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\nimport { getPosts } from \"../../WebAPI\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../../components/Spinner\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 30px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  margin-top: 24px;\n\n  &:last-child {\n    margin-bottom: 24px;\n  }\n`;\nconst PostTitle = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 24px;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst Post = ({ post }) => {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n};\n\nconst HomePage = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((posts) => setPosts(posts));\n  }, []);\n\n  return (\n    <Root>\n      {posts.length > 0 ? (\n        posts.map((post) => <Post key={post.id} post={post} />)\n      ) : (\n        <Spinner />\n      )}\n    </Root>\n  );\n};\n\nexport default HomePage;\n","import styled from \"styled-components\";\nimport React, { useContext } from \"react\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 32px;\n  box-sizing: border-box;\n  background: white;\n  z-index: 2;\n`;\n\nconst Brand = styled(Link)`\n  font-size: 32px;\n  font-weight: bold;\n  color: rgba(0, 0, 0, 0.6);\n  text-decoration: none;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100px;\n  height: 64px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n\n  ${(props) => props.$active && `background: rgba(0, 0, 0, 0.2)`}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${NavbarList} {\n    margin-left: 30px;\n  }\n`;\n\nfunction Header() {\n  const { user, setUser } = useContext(AuthContext);\n  const location = useLocation();\n  const history = useHistory();\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand to=\"/\">Blog</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/post-list\" $active={location.pathname === \"/post-list\"}>\n            文章列表\n          </Nav>\n          <Nav to=\"/about-me\" $active={location.pathname === \"/about-me\"}>\n            關於我\n          </Nav>\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {!user && (\n          <>\n            <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n              登入\n            </Nav>\n            <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n              註冊\n            </Nav>\n          </>\n        )}\n        {user && (\n          <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n            發布文章\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavbarList>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n","import styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport AboutMePage from \"../../pages/AboutMePage\";\nimport RegisterPage from \"../../pages/RegisterPage\";\nimport PostPage from \"../../pages/PostPage\";\nimport AddPostPage from \"../../pages/AddPostPage\";\nimport PostListPage from \"../../pages/PostListPage\";\nimport Header from \"../Header\";\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport { getAuthToken } from \"../../utils\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(() => {\n    const token = getAuthToken();\n    if (token) {\n      return getMe().then((res) => {\n        if (res.ok) {\n          setUser(res.data);\n        }\n      });\n    }\n    return null;\n  });\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/post-list\">\n              <PostListPage />\n            </Route>\n            <Route path=\"/about-me\">\n              <AboutMePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route path=\"/post/:id\">\n              <PostPage />\n            </Route>\n            <Route path=\"/new-post\">\n              <AddPostPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}